# Skims (only needed for stand-alone implementation)
auto.peak.travelTime            = skims/skimsAllIntrazonal.omx
transit.peak.time             = skims/skimsAllIntrazonal.omx

# Zonal DataSet (only needed for stand-alone implementation)
zonal.data.file               = input/zoneSystem.csv
zone.shapefile                = input/zonesShapefile/zonesNew.shp
zone.shapefile.id.field       = id

# Synthetic Population (only needed for stand-alone implementation)
household.file.ascii          = microData/hh_2011.csv
person.file.ascii             = microData/pp_2011.csv
job.file.ascii                = microData/jj_2011.csv
dwelling.file.ascii           = microData/dd_2011.csv
school.file.ascii             = microData/ss_2011.csv


# General input data
economic.status.definition    = input/economicStatusClassification.csv

# Trip generation
household.travel.survey.hh    =  travelSurveyDummy.csv
household.travel.survey.trips =  travelSurveyTripsDummy.csv
HBW.trip.frequencies          = input/HBWhhTypes_tripFrequencies.csv
HBE.trip.frequencies          = input/HBEhhTypes_tripFrequencies.csv
HBO.trip.frequencies          = input/HBOhhTypes_tripFrequencies.csv
HBS.trip.frequencies          = input/HBShhTypes_tripFrequencies.csv
NHBW.trip.frequencies          = input/NHBWhhTypes_tripFrequencies.csv
NHBO.trip.frequencies          = input/NHBOhhTypes_tripFrequencies.csv

hh.type.HBW                   = 20,1-8,0-0.1-1.2-2.3-4,1-1.2-2.3-3.4-4.5-5,0-8,1-4
hh.type.HBE                   = 24,1-2.3-3.4-4.5-8,0-4,1-3.4-5,0-1.2-2.3-8,1-4
hh.type.HBS                   = 24,1-2.3-3.4-4.5-8,0-4,1-3.4-5,0-1.2-2.3-8,1-4
hh.type.HBO                   = 24,1-2.3-3.4-4.5-8,0-4,1-3.4-5,0-1.2-2.3-8,1-4
hh.type.NHBW                  = 24,1-8,0-0.1-1.2-7,1-1.2-2.3-3.4-4.5-5,0-8,1-2.3-4
hh.type.NHBO                  = 18,1-1.2-2.3-8,0-0.1-7,1-5,0-0.1-1.2-8,1-4

remove.non.motorized.trips    = true
reduce.trips.at.outer.border  = true
reduction.near.outer.border   = input/TripProductionReductionAtBorder.csv
trip.attraction.rates         = input/tripAttractionRates.csv

# Travel time budget coefficients

ttb.js                        = TravelTimeBudgetCalc
year                          = 2011
scenario.name                 = test


# Mode choice input
bus.travelTime 		          = skims/skimsAllIntrazonal.omx
tramMetro.travelTime 	      = skims/skimsAllIntrazonal.omx
train.travelTime 	          = skims/skimsAllIntrazonal.omx
auto.travelDistance 	      = skims/skimsAllIntrazonal.omx
nmt.travelDistance	          = skims/skimsAllIntrazonal.omx
areaTypes.distToRailStop      = input/zones_areaType_distToRailStop.csv

# Output files
non.motorized.trips           = output/nonMotorizedTrips.csv
removed.trips.near.border     = output/removedTripsNearBorder.csv
trip.production.output        = testOutput/tripProduction.csv
trip.attraction.output        = testOutput/tripAttraction.csv

run.time.of.day.choice		  = true
time.of.day.distribution.file = input//mid_time_of_day.csv

run.trip.scaling		  	  = true
trip.scaling.factor			  = 0.005

run.traffic.assignment		  = true
matsim.network 				  = input/studyNetworkLight.xml
matsim.iterations 			  = 0



# Developer properties
anal.autos.or.autosufficiency = autos
min.no.of.records.by.hh.type  = 30
#Trip purpose,Number of HH types,HH Size Segmentation,Worker Segmentation,Income Segmentation (Economic status),Auto-ownership Segmentation,Region Segmentation

# Set random.seed to -1 for random order of random numbers, set to any other value same order of random numbers
random.seed                   = 1

mc.calibration.constants.file = input/calibration.csv
mc.calibration.regions.file = input/calibrationRegions.csv